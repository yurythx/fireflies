# FireFlies Deploy Configuration
# Configurações do sistema de deploy automatizado

# =============================================================================
# CONFIGURAÇÕES GERAIS
# =============================================================================

# Ambiente padrão (development, staging, production)
DEFAULT_ENVIRONMENT=development

# Nível de log (0=DEBUG, 1=INFO, 2=WARNING, 3=ERROR)
LOG_LEVEL=1

# Diretório de logs
LOG_DIR=logs

# Arquivo de log
LOG_FILE=${LOG_DIR}/deploy.log

# =============================================================================
# CONFIGURAÇÕES DE VALIDAÇÃO
# =============================================================================

# Validar pré-requisitos antes do deploy
VALIDATE_PREREQUISITES=true

# Validar configuração do ambiente
VALIDATE_ENVIRONMENT=true

# Validar portas disponíveis
VALIDATE_PORTS=true

# Validar conectividade de rede
VALIDATE_NETWORK=true

# Validar recursos do sistema
VALIDATE_SYSTEM_RESOURCES=true

# Validar arquivos Docker
VALIDATE_DOCKER_FILES=true

# =============================================================================
# CONFIGURAÇÕES DE DOCKER
# =============================================================================

# Fazer backup antes do deploy
BACKUP_BEFORE_DEPLOY=true

# Limpar recursos Docker após deploy
CLEANUP_AFTER_DOCKER=false

# Forçar rebuild das imagens
FORCE_REBUILD=false

# Usar cache Docker
USE_DOCKER_CACHE=true

# Timeout para operações Docker (segundos)
DOCKER_TIMEOUT=300

# =============================================================================
# CONFIGURAÇÕES DE PORTA
# =============================================================================

# Porta padrão da aplicação web
DEFAULT_WEB_PORT=8000

# Porta padrão do banco de dados
DEFAULT_DB_PORT=5432

# Porta padrão do Redis
DEFAULT_REDIS_PORT=6379

# Porta padrão do Nginx (se usado)
DEFAULT_NGINX_PORT=80

# Porta padrão do Nginx SSL (se usado)
DEFAULT_NGINX_SSL_PORT=443

# =============================================================================
# CONFIGURAÇÕES DE HEALTH CHECK
# =============================================================================

# Fazer health check após deploy
HEALTH_CHECK_AFTER_DEPLOY=true

# Timeout para health check (segundos)
HEALTH_CHECK_TIMEOUT=60

# Intervalo entre tentativas de health check (segundos)
HEALTH_CHECK_INTERVAL=5

# Número máximo de tentativas de health check
HEALTH_CHECK_MAX_RETRIES=12

# Health check rápido para CI/CD
QUICK_HEALTH_CHECK=false

# =============================================================================
# CONFIGURAÇÕES DE BACKUP
# =============================================================================

# Diretório de backup
BACKUP_DIR=backups

# Manter backups por X dias
BACKUP_RETENTION_DAYS=7

# Comprimir backups automaticamente
COMPRESS_BACKUPS=true

# Backup de volumes Docker
BACKUP_DOCKER_VOLUMES=true

# Backup de arquivos de configuração
BACKUP_CONFIG_FILES=true

# =============================================================================
# CONFIGURAÇÕES DE MONITORAMENTO
# =============================================================================

# Monitoramento contínuo
ENABLE_MONITORING=false

# Intervalo de monitoramento (segundos)
MONITORING_INTERVAL=30

# Alertas por email (se configurado)
EMAIL_ALERTS=false

# Alertas por Slack (se configurado)
SLACK_ALERTS=false

# =============================================================================
# CONFIGURAÇÕES DE LIMPEZA
# =============================================================================

# Limpar logs antigos automaticamente
CLEANUP_LOGS=true

# Manter logs por X dias
LOG_RETENTION_DAYS=7

# Limpar imagens Docker não utilizadas
CLEANUP_DOCKER_IMAGES=true

# Limpar containers parados
CLEANUP_STOPPED_CONTAINERS=true

# Limpar volumes não utilizados
CLEANUP_UNUSED_VOLUMES=false

# =============================================================================
# CONFIGURAÇÕES DE SEGURANÇA
# =============================================================================

# Verificar configurações de segurança
SECURITY_CHECKS=true

# Validar SECRET_KEY em produção
VALIDATE_SECRET_KEY=true

# Validar DEBUG=False em produção
VALIDATE_DEBUG_PRODUCTION=true

# Validar ALLOWED_HOSTS em produção
VALIDATE_ALLOWED_HOSTS=true

# =============================================================================
# CONFIGURAÇÕES DE NOTIFICAÇÃO
# =============================================================================

# Notificar início do deploy
NOTIFY_DEPLOY_START=false

# Notificar sucesso do deploy
NOTIFY_DEPLOY_SUCCESS=true

# Notificar falha do deploy
NOTIFY_DEPLOY_FAILURE=true

# Notificar problemas de saúde
NOTIFY_HEALTH_ISSUES=true

# =============================================================================
# CONFIGURAÇÕES ESPECÍFICAS POR AMBIENTE
# =============================================================================

[development]
# Configurações específicas para desenvolvimento
DEBUG=true
LOG_LEVEL=0
BACKUP_BEFORE_DEPLOY=false
CLEANUP_AFTER_DOCKER=false
HEALTH_CHECK_AFTER_DEPLOY=false
ENABLE_MONITORING=false

[staging]
# Configurações específicas para staging
DEBUG=false
LOG_LEVEL=1
BACKUP_BEFORE_DEPLOY=true
CLEANUP_AFTER_DOCKER=false
HEALTH_CHECK_AFTER_DEPLOY=true
ENABLE_MONITORING=true

[production]
# Configurações específicas para produção
DEBUG=false
LOG_LEVEL=2
BACKUP_BEFORE_DEPLOY=true
CLEANUP_AFTER_DOCKER=true
HEALTH_CHECK_AFTER_DEPLOY=true
ENABLE_MONITORING=true
SECURITY_CHECKS=true
VALIDATE_SECRET_KEY=true
VALIDATE_DEBUG_PRODUCTION=true
VALIDATE_ALLOWED_HOSTS=true

# =============================================================================
# CONFIGURAÇÕES DE COMANDOS DJANGO
# =============================================================================

# Comandos Django a executar após deploy
DJANGO_COMMANDS=(
    "migrate"
    "collectstatic --noinput"
    "check --deploy"
)

# Comandos Django para primeira instalação
DJANGO_FIRST_INSTALL_COMMANDS=(
    "migrate"
    "collectstatic --noinput"
    "check --deploy"
    "createsuperuser --noinput"
)

# =============================================================================
# CONFIGURAÇÕES DE TIMEOUT
# =============================================================================

# Timeout para build Docker (segundos)
DOCKER_BUILD_TIMEOUT=600

# Timeout para deploy Docker Compose (segundos)
DOCKER_COMPOSE_TIMEOUT=300

# Timeout para comandos Django (segundos)
DJANGO_COMMAND_TIMEOUT=120

# Timeout para health check (segundos)
HEALTH_CHECK_TIMEOUT=60

# =============================================================================
# CONFIGURAÇÕES DE RECURSOS
# =============================================================================

# Memória mínima requerida (MB)
MIN_MEMORY_MB=512

# Espaço em disco mínimo requerido (MB)
MIN_DISK_SPACE_MB=1024

# CPU mínima requerida (cores)
MIN_CPU_CORES=1

# =============================================================================
# CONFIGURAÇÕES DE REDE
# =============================================================================

# Verificar conectividade com internet
CHECK_INTERNET_CONNECTIVITY=true

# Verificar DNS
CHECK_DNS=true

# Verificar portas locais
CHECK_LOCAL_PORTS=true

# =============================================================================
# CONFIGURAÇÕES DE LOGS
# =============================================================================

# Rotacionar logs automaticamente
ROTATE_LOGS=true

# Tamanho máximo do arquivo de log (MB)
MAX_LOG_SIZE_MB=10

# Comprimir logs antigos
COMPRESS_LOGS=true

# =============================================================================
# CONFIGURAÇÕES DE DEBUG
# =============================================================================

# Modo debug do deploy
DEPLOY_DEBUG=false

# Mostrar comandos executados
SHOW_COMMANDS=false

# Pausar entre etapas (para debug)
PAUSE_BETWEEN_STEPS=false

# =============================================================================
# CONFIGURAÇÕES DE FALLBACK
# =============================================================================

# Tentar fallback em caso de falha
ENABLE_FALLBACK=true

# Número máximo de tentativas
MAX_RETRIES=3

# Delay entre tentativas (segundos)
RETRY_DELAY=10 