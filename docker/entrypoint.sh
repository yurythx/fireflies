#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

# Fun칞칚o para logging
log() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"
}

# Fun칞칚o para aguardar servi칞os
wait_for_service() {
    local host=$1
    local port=$2
    local service_name=$3
    
    log "Aguardando $service_name em $host:$port..."
    
    while ! nc -z "$host" "$port"; do
        log "Aguardando $service_name..."
        sleep 1
    done
    
    log "$service_name est치 dispon칤vel!"
}

# Verificar se 칠 primeira instala칞칚o
if [ -f "/app/.first_install" ]; then
    log "游꿢 Primeira instala칞칚o detectada - pulando configura칞칚o autom치tica"
    log "游댢 Use o wizard de configura칞칚o em http://localhost:8000/"
    
    # Aguardar banco de dados apenas se configurado
    if [ -n "${DB_HOST:-}" ] && [ "${DB_HOST}" != "localhost" ]; then
        wait_for_service "$DB_HOST" "${DB_PORT:-5432}" "PostgreSQL"
    fi
    
    # Aguardar Redis apenas se configurado
    if [ -n "${REDIS_URL:-}" ]; then
        REDIS_HOST=$(echo "$REDIS_URL" | sed -n 's/.*:\/\/\([^:]*\).*/\1/p')
        REDIS_PORT=$(echo "$REDIS_URL" | sed -n 's/.*:\([0-9]*\).*/\1/p')
        if [ -n "$REDIS_HOST" ] && [ -n "$REDIS_PORT" ]; then
            wait_for_service "$REDIS_HOST" "$REDIS_PORT" "Redis"
        fi
    fi
    
    # Executar apenas migrations b치sicas para primeira instala칞칚o
    log "Executando migrations b치sicas..."
    python manage.py migrate --noinput || log "丘멆잺 Migrations podem falhar em primeira instala칞칚o"
    
    # N츾O coletar arquivos est치ticos em primeira instala칞칚o
    # N츾O criar superusu치rio em primeira instala칞칚o
    
else
    log "游댃 Instala칞칚o normal detectada"
    
    # Aguardar banco de dados
    if [ -n "${DB_HOST:-}" ]; then
        wait_for_service "$DB_HOST" "${DB_PORT:-5432}" "PostgreSQL"
    fi
    
    # Aguardar Redis
    if [ -n "${REDIS_URL:-}" ]; then
        REDIS_HOST=$(echo "$REDIS_URL" | sed -n 's/.*:\/\/\([^:]*\).*/\1/p')
        REDIS_PORT=$(echo "$REDIS_URL" | sed -n 's/.*:\([0-9]*\).*/\1/p')
        if [ -n "$REDIS_HOST" ] && [ -n "$REDIS_PORT" ]; then
            wait_for_service "$REDIS_HOST" "$REDIS_PORT" "Redis"
        fi
    fi
    
    # Executar migra칞칫es
    log "Executando migra칞칫es do banco de dados..."
    python manage.py migrate --noinput
    
    # Coletar arquivos est치ticos
    log "Coletando arquivos est치ticos..."
    python manage.py collectstatic --noinput --clear
    
    # Criar superusu치rio apenas se n칚o existir (backup)
    log "Verificando superusu치rio..."
    python manage.py shell << 'EOF'
from django.contrib.auth import get_user_model
User = get_user_model()

if not User.objects.filter(is_superuser=True).exists():
    User.objects.create_superuser(
        username='admin',
        email='admin@havoc.com',
        password='admin123',
        first_name='Admin',
        last_name='System'
    )
    print("Superusu치rio criado: admin/admin123")
else:
    print("Superusu치rio j치 existe")
EOF
fi

# Executar comando passado como argumento
log "Executando comando: $*"
exec "$@"
