#!/bin/bash

# Script para corrigir erro de valida√ß√£o do docker-compose.yml
# Executar no servidor Linux onde o deploy est√° falhando

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√µes de logging
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_section() {
    echo -e "\n${BLUE}==================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}==================================${NC}"
}

log_section "üîß Corre√ß√£o de Erro de Valida√ß√£o Docker Compose"

# 1. Verificar se estamos no diret√≥rio correto
if [[ ! -f "docker-compose.yml" ]]; then
    log_error "docker-compose.yml n√£o encontrado no diret√≥rio atual"
    log_info "Certifique-se de estar no diret√≥rio do projeto FireFlies"
    exit 1
fi

log_success "docker-compose.yml encontrado"

# 2. Verificar permiss√µes do arquivo
log_info "Verificando permiss√µes do docker-compose.yml..."
ls -la docker-compose.yml

# 3. Verificar codifica√ß√£o do arquivo
log_info "Verificando codifica√ß√£o do arquivo..."
if command -v file &> /dev/null; then
    file docker-compose.yml
else
    log_warning "Comando 'file' n√£o dispon√≠vel, pulando verifica√ß√£o de codifica√ß√£o"
fi

# 4. Verificar se h√° caracteres especiais
log_info "Verificando caracteres especiais..."
if grep -q $'\r' docker-compose.yml; then
    log_warning "Arquivo cont√©m caracteres de retorno de carro (Windows line endings)"
    log_info "Convertendo para Unix line endings..."
    dos2unix docker-compose.yml 2>/dev/null || sed -i 's/\r$//' docker-compose.yml
    log_success "Line endings convertidos"
else
    log_success "Line endings est√£o corretos"
fi

# 5. Verificar sintaxe com docker-compose
log_info "Testando sintaxe do docker-compose.yml..."
if docker-compose config > /dev/null 2>&1; then
    log_success "Sintaxe do docker-compose.yml est√° v√°lida"
else
    log_error "Erro de sintaxe detectado"
    log_info "Executando valida√ß√£o detalhada..."
    docker-compose config
    exit 1
fi

# 6. Verificar se h√° vari√°veis de ambiente n√£o definidas
log_info "Verificando vari√°veis de ambiente..."
if [[ -f ".env" ]]; then
    log_success "Arquivo .env encontrado"
    
    # Verificar se as vari√°veis necess√°rias est√£o definidas
    required_vars=("DB_NAME" "DB_USER" "DB_PASSWORD" "SECRET_KEY")
    missing_vars=()
    
    for var in "${required_vars[@]}"; do
        if ! grep -q "^${var}=" .env; then
            missing_vars+=("$var")
        fi
    done
    
    if [[ ${#missing_vars[@]} -gt 0 ]]; then
        log_warning "Vari√°veis faltando no .env: ${missing_vars[*]}"
    else
        log_success "Todas as vari√°veis necess√°rias est√£o definidas"
    fi
else
    log_warning "Arquivo .env n√£o encontrado"
fi

# 7. Verificar se h√° conflitos de porta
log_info "Verificando portas em uso..."
ports_to_check=(80 443 8000 5432 6379)
occupied_ports=()

for port in "${ports_to_check[@]}"; do
    if lsof -i ":$port" &> /dev/null; then
        occupied_ports+=("$port")
    fi
done

if [[ ${#occupied_ports[@]} -gt 0 ]]; then
    log_warning "Portas ocupadas: ${occupied_ports[*]}"
    log_info "Isso pode causar problemas no deploy"
else
    log_success "Todas as portas necess√°rias est√£o livres"
fi

# 8. Verificar se o Docker est√° funcionando
log_info "Verificando Docker..."
if ! docker info &> /dev/null; then
    log_error "Docker n√£o est√° funcionando ou n√£o est√° acess√≠vel"
    exit 1
fi

if ! docker-compose version &> /dev/null; then
    log_error "Docker Compose n√£o est√° dispon√≠vel"
    exit 1
fi

log_success "Docker e Docker Compose est√£o funcionando"

# 9. Teste final de valida√ß√£o
log_info "Executando teste final de valida√ß√£o..."
if docker-compose config &> /dev/null; then
    log_success "‚úÖ Valida√ß√£o final: SUCESSO"
    log_info "O docker-compose.yml est√° v√°lido e pronto para uso"
else
    log_error "‚ùå Valida√ß√£o final: FALHA"
    log_info "Executando valida√ß√£o com output completo para debug..."
    docker-compose config
    exit 1
fi

log_section "üéØ Resumo da Corre√ß√£o"
log_success "Todas as verifica√ß√µes passaram"
log_info "O arquivo docker-compose.yml est√° v√°lido"
log_info "Voc√™ pode tentar executar o deploy novamente"

# 10. Sugest√µes adicionais
log_section "üí° Sugest√µes"
log_info "Se o problema persistir, tente:"
log_info "1. docker-compose down --remove-orphans"
log_info "2. docker system prune -f"
log_info "3. Executar o deploy novamente"

exit 0 